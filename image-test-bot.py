import sqlite3 as sl
import praw
import pprint
import re
import datetime
import time
import sys
import pytesseract
import requests

# db access
def markAsWritten(postName):
	con = sl.connect('flair.db')
	cursor = con.cursor()
	insert = """insert into TaggedPosts(Id, Date) values(?, ?)"""
	data = (postName, datetime.datetime.now())
	cursor.execute(insert, data)
	con.commit()
	cursor.close()
	con.close()

def checkIfWritten(postName):
	con = sl.connect('flair.db')
	data = con.execute('select Id from TaggedPosts')
	result = postName in list(map(lambda x: x[0], data))
	con.close()
	return result
	
def markAsHub(postName, subreddit, type):
	con = sl.connect('flair.db')
	cursor = con.cursor()
	insert = """insert into Hubs(Id, Date, Subreddit, Type) values(?, ?, ?, ?)"""
	data = (postName, datetime.datetime.now(), subreddit, type)
	cursor.execute(insert, data)
	con.commit()
	cursor.close()
	con.close()
	
def getHubId(subreddit, type):
	con = sl.connect('flair.db')
	cursor = con.cursor()
	query = 'select Id from Hubs where Subreddit = ? and Type = ? order by Date desc limit 1'
	data = (subreddit, type)
	result = cursor.execute(query, data)
	for row in result:
		hub = row[0]
	cursor.close()
	con.close()
	return hub

# strings
botDisclaimer = '\n\n*(this reply was generated by a bot)*'
def hubUrl(subreddit, id):
	return "\n\n[Here's a link to a recent thread I found!](https://reddit.com/r/" + subreddit + "/comments/" + id  + "/_/)"

# commands
def removeWithReason(post, reason):
	print(post)
	comment = post.reply(reason + botDisclaimer)
	comment.mod.distinguish(how='yes', sticky=True)
	post.mod.remove()
	
def removeWithoutReason(post):
	print(post)
	post.mod.remove()
	
def addMessage(post, message):
	if not checkIfWritten(post.id):
		print(post)
		comment = post.reply(message + botDisclaimer)
		comment.mod.distinguish(how='yes', sticky=True)
		markAsWritten(post.id)

def addAsHubWithMessage(post, message, subreddit, type):
	if not checkIfWritten(post.id):
		print(post)
		comment = post.reply(message + botDisclaimer)
		comment.mod.distinguish(how='yes', sticky=True)
		markAsHub(post.id, subreddit, type)
		markAsWritten(post.id)

def addAsHubWithoutMessage(post, subreddit, type):
	if not checkIfWritten(post.id):
		print(post)
		markAsHub(post.id, subreddit, type)
		markAsWritten(post.id)
		
def removeForHub(post, message, subreddit, type):
	print(post)
	hubId = getHubId(subreddit, type)
	comment = post.reply(message + hubUrl(subreddit, hubId) + botDisclaimer)
	comment.mod.distinguish(how='yes', sticky=True)
	post.mod.remove()

# file access
def downloadImage(url, id):
	with open('ocr.jpg', 'wb') as handle:
		response = requests.get(url,stream=True)
		
		for block in response.iter_content(1024):
			if not block:
				break
			handle.write(block)

r = praw.Reddit('flairactionbot', user_agent='randombot')

gizz = r.subreddit('andomprecision1').new(limit=30)
for post in gizz:
	matches = ['top song', 'top artist', 'spotify', 'total streams', 'share this story', 'you were in']
	if (post.domain == 'i.redd.it' or post.domain == 'i.imgur.com') and post.link_flair_text != 'EOYRoot':
		url = post.url
		print(post.id)
		downloadImage(url, post.id)
		text = pytesseract.image_to_string('ocr.jpg').lower()
		print(text)
		if any(x in text for x in matches):
			print(post.id + ' matched')
			# post.mod.flair(text='EOY')
	if hasattr(post, 'is_gallery') and post.is_gallery == True and post.link_flair_text != 'EOYRoot':
		firstId = post.gallery_data['items'][0]['media_id']
		url = post.media_metadata[firstId]['p'][2]['u']
		print(post.id)
		downloadImage(url, post.id)
		text = pytesseract.image_to_string('ocr.jpg').lower()
		print(text)
		if any(x in text for x in matches):
			print(post.id + ' matched')
			# post.mod.flair(text='EOY')
	if (post.domain == 'imgur.com' and 'imgur.com' in post.url and '/a/' not in post.url):
		print(post.id)
		pattern = 'https://imgur.com/(.*)'
		search = re.search(pattern, post.url)
		result = search.group(1)
		url = 'https://i.imgur.com/' + result + '.jpg'
		downloadImage(url, post.id)
		text = pytesseract.image_to_string('ocr.jpg').lower()
		print(text)
		if any(x in text for x in matches):
			print(post.id + ' matched')
			# post.mod.flair(text='EOY')